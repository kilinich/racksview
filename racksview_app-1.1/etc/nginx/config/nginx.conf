
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    lua_check_client_abort on;  # Detect client aborts
    lua_code_cache on;
    lua_shared_dict streamer_cache 10m;
    # Set Lua base directory for scripts
    lua_package_path "/opt/racksview/etc/nginx/lua/?.lua;;";

    # Buffer settings to minimize memory per connection
    output_buffers 1 32k;  # One 32k buffer per connection; adjust based on frame size
    client_body_buffer_size 8k;  # Minimal for headers (MJPEG has no request body)
    client_max_body_size 1m;  # Prevent abuse if POST/PUT requests occur


    server {
        listen       80;
        server_name  racksview; 

        # Serve static files at root (/)
        location / {
            root   /opt/racksview/etc/nginx/html;
            index  index.html;
        }

        # Proxy raw TCP MJPEG stream with added HTTP headers
        location /stream-back {
            content_by_lua_block {
                streamer.stream_mjpeg(8013, "--ThisRandomString")
            }
        }
        location /preview-back {
            content_by_lua_block {
                streamer.stream_mjpeg(8012, "--ThisRandomString")
            }
        }
        location /stream-front {
            content_by_lua_block {
                streamer.stream_mjpeg(9013, "--ThisRandomString")
            }
        }
        location /preview-front {
            content_by_lua_block {
                streamer.stream_mjpeg(9012, "--ThisRandomString")
            }
        }

        # Serve static files from /events/ directory
        location /events/ {
            alias /opt/racksview/var/events/;
            autoindex on;
            add_before_body /downloads.css; # Add custom CSS before body
            add_after_body /disable-top.js; # Injection of custom JS after body
            autoindex_exact_size off;  # Use human-readable file sizes
        }
    }
}